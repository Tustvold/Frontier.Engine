#ifndef GLEWMOCK2_H
#define GLEWMOCK2_H

#include "gmock/gmock.h"
#include "GL/glew.h"
#include "glmock.hpp"

// The mock methods had to be split into 2 classes as when it was just one class it created
// objects with too many sections for the COFF format on compilers which use COMDAT sections
class GlewMock2 : public GLMock  {
public:
	GlewMock2();
	virtual ~GlewMock2();
	static GlewMock2* getMock();

	MOCK_METHOD4(gl_GetProgramInfoLog, void (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog));
	MOCK_METHOD4(gl_GetShaderInfoLog, void (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog));
	MOCK_METHOD4(gl_GetShaderSource, void (GLuint obj, GLsizei maxLength, GLsizei* length, GLchar* source));
	MOCK_METHOD2(gl_GetUniformLocation, int (GLuint program, const GLchar* name));
	MOCK_METHOD3(gl_GetUniformfv, void (GLuint program, GLint location, GLfloat* params));
	MOCK_METHOD3(gl_GetUniformiv, void (GLuint program, GLint location, GLint* params));
	MOCK_METHOD3(gl_GetVertexAttribPointerv, void (GLuint index, GLenum pname, void** pointer));
	MOCK_METHOD3(gl_GetVertexAttribdv, void (GLuint index, GLenum pname, GLdouble* params));
	MOCK_METHOD3(gl_GetVertexAttribfv, void (GLuint index, GLenum pname, GLfloat* params));
	MOCK_METHOD3(gl_GetVertexAttribiv, void (GLuint index, GLenum pname, GLint* params));
	MOCK_METHOD1(gl_IsProgram, unsigned char (GLuint program));
	MOCK_METHOD1(gl_IsShader, unsigned char (GLuint shader));
	MOCK_METHOD1(gl_LinkProgram, void (GLuint program));
	MOCK_METHOD4(gl_ShaderSource, void (GLuint shader, GLsizei count, const GLchar*const * string, const GLint* length));
	MOCK_METHOD4(gl_StencilFuncSeparate, void (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask));
	MOCK_METHOD2(gl_StencilMaskSeparate, void (GLenum face, GLuint mask));
	MOCK_METHOD4(gl_StencilOpSeparate, void (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass));
	MOCK_METHOD2(gl_Uniform1f, void (GLint location, GLfloat v0));
	MOCK_METHOD3(gl_Uniform1fv, void (GLint location, GLsizei count, const GLfloat* value));
	MOCK_METHOD2(gl_Uniform1i, void (GLint location, GLint v0));
	MOCK_METHOD3(gl_Uniform1iv, void (GLint location, GLsizei count, const GLint* value));
	MOCK_METHOD3(gl_Uniform2f, void (GLint location, GLfloat v0, GLfloat v1));
	MOCK_METHOD3(gl_Uniform2fv, void (GLint location, GLsizei count, const GLfloat* value));
	MOCK_METHOD3(gl_Uniform2i, void (GLint location, GLint v0, GLint v1));
	MOCK_METHOD3(gl_Uniform2iv, void (GLint location, GLsizei count, const GLint* value));
	MOCK_METHOD4(gl_Uniform3f, void (GLint location, GLfloat v0, GLfloat v1, GLfloat v2));
	MOCK_METHOD3(gl_Uniform3fv, void (GLint location, GLsizei count, const GLfloat* value));
	MOCK_METHOD4(gl_Uniform3i, void (GLint location, GLint v0, GLint v1, GLint v2));
	MOCK_METHOD3(gl_Uniform3iv, void (GLint location, GLsizei count, const GLint* value));
	MOCK_METHOD5(gl_Uniform4f, void (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3));
	MOCK_METHOD3(gl_Uniform4fv, void (GLint location, GLsizei count, const GLfloat* value));
	MOCK_METHOD5(gl_Uniform4i, void (GLint location, GLint v0, GLint v1, GLint v2, GLint v3));
	MOCK_METHOD3(gl_Uniform4iv, void (GLint location, GLsizei count, const GLint* value));
	MOCK_METHOD4(gl_UniformMatrix2fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD4(gl_UniformMatrix3fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD4(gl_UniformMatrix4fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD1(gl_UseProgram, void (GLuint program));
	MOCK_METHOD1(gl_ValidateProgram, void (GLuint program));
	MOCK_METHOD2(gl_VertexAttrib1d, void (GLuint index, GLdouble x));
	MOCK_METHOD2(gl_VertexAttrib1dv, void (GLuint index, const GLdouble* v));
	MOCK_METHOD2(gl_VertexAttrib1f, void (GLuint index, GLfloat x));
	MOCK_METHOD2(gl_VertexAttrib1fv, void (GLuint index, const GLfloat* v));
	MOCK_METHOD2(gl_VertexAttrib1s, void (GLuint index, GLshort x));
	MOCK_METHOD2(gl_VertexAttrib1sv, void (GLuint index, const GLshort* v));
	MOCK_METHOD3(gl_VertexAttrib2d, void (GLuint index, GLdouble x, GLdouble y));
	MOCK_METHOD2(gl_VertexAttrib2dv, void (GLuint index, const GLdouble* v));
	MOCK_METHOD3(gl_VertexAttrib2f, void (GLuint index, GLfloat x, GLfloat y));
	MOCK_METHOD2(gl_VertexAttrib2fv, void (GLuint index, const GLfloat* v));
	MOCK_METHOD3(gl_VertexAttrib2s, void (GLuint index, GLshort x, GLshort y));
	MOCK_METHOD2(gl_VertexAttrib2sv, void (GLuint index, const GLshort* v));
	MOCK_METHOD4(gl_VertexAttrib3d, void (GLuint index, GLdouble x, GLdouble y, GLdouble z));
	MOCK_METHOD2(gl_VertexAttrib3dv, void (GLuint index, const GLdouble* v));
	MOCK_METHOD4(gl_VertexAttrib3f, void (GLuint index, GLfloat x, GLfloat y, GLfloat z));
	MOCK_METHOD2(gl_VertexAttrib3fv, void (GLuint index, const GLfloat* v));
	MOCK_METHOD4(gl_VertexAttrib3s, void (GLuint index, GLshort x, GLshort y, GLshort z));
	MOCK_METHOD2(gl_VertexAttrib3sv, void (GLuint index, const GLshort* v));
	MOCK_METHOD2(gl_VertexAttrib4Nbv, void (GLuint index, const GLbyte* v));
	MOCK_METHOD2(gl_VertexAttrib4Niv, void (GLuint index, const GLint* v));
	MOCK_METHOD2(gl_VertexAttrib4Nsv, void (GLuint index, const GLshort* v));
	MOCK_METHOD5(gl_VertexAttrib4Nub, void (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w));
	MOCK_METHOD2(gl_VertexAttrib4Nubv, void (GLuint index, const GLubyte* v));
	MOCK_METHOD2(gl_VertexAttrib4Nuiv, void (GLuint index, const GLuint* v));
	MOCK_METHOD2(gl_VertexAttrib4Nusv, void (GLuint index, const GLushort* v));
	MOCK_METHOD2(gl_VertexAttrib4bv, void (GLuint index, const GLbyte* v));
	MOCK_METHOD5(gl_VertexAttrib4d, void (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w));
	MOCK_METHOD2(gl_VertexAttrib4dv, void (GLuint index, const GLdouble* v));
	MOCK_METHOD5(gl_VertexAttrib4f, void (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w));
	MOCK_METHOD2(gl_VertexAttrib4fv, void (GLuint index, const GLfloat* v));
	MOCK_METHOD2(gl_VertexAttrib4iv, void (GLuint index, const GLint* v));
	MOCK_METHOD5(gl_VertexAttrib4s, void (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w));
	MOCK_METHOD2(gl_VertexAttrib4sv, void (GLuint index, const GLshort* v));
	MOCK_METHOD2(gl_VertexAttrib4ubv, void (GLuint index, const GLubyte* v));
	MOCK_METHOD2(gl_VertexAttrib4uiv, void (GLuint index, const GLuint* v));
	MOCK_METHOD2(gl_VertexAttrib4usv, void (GLuint index, const GLushort* v));
	MOCK_METHOD6(gl_VertexAttribPointer, void (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer));
	MOCK_METHOD4(gl_UniformMatrix2x3fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD4(gl_UniformMatrix2x4fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD4(gl_UniformMatrix3x2fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD4(gl_UniformMatrix3x4fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD4(gl_UniformMatrix4x2fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD4(gl_UniformMatrix4x3fv, void (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value));
	MOCK_METHOD2(gl_BeginConditionalRender, void (GLuint id, GLenum mode));
	MOCK_METHOD1(gl_BeginTransformFeedback, void (GLenum primitiveMode));
	MOCK_METHOD3(gl_BindFragDataLocation, void (GLuint program, GLuint colorNumber, const GLchar* name));
	MOCK_METHOD2(gl_ClampColor, void (GLenum target, GLenum clamp));
	MOCK_METHOD4(gl_ClearBufferfi, void (GLenum buffer, GLint drawBuffer, GLfloat depth, GLint stencil));
	MOCK_METHOD3(gl_ClearBufferfv, void (GLenum buffer, GLint drawBuffer, const GLfloat* value));
	MOCK_METHOD3(gl_ClearBufferiv, void (GLenum buffer, GLint drawBuffer, const GLint* value));
	MOCK_METHOD3(gl_ClearBufferuiv, void (GLenum buffer, GLint drawBuffer, const GLuint* value));
	MOCK_METHOD5(gl_ColorMaski, void (GLuint buf, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha));
	MOCK_METHOD2(gl_Disablei, void (GLenum cap, GLuint index));
	MOCK_METHOD2(gl_Enablei, void (GLenum cap, GLuint index));
	MOCK_METHOD0(gl_EndConditionalRender, void ());
	MOCK_METHOD0(gl_EndTransformFeedback, void ());
	MOCK_METHOD3(gl_GetBooleani_v, void (GLenum pname, GLuint index, GLboolean* data));
	MOCK_METHOD2(gl_GetFragDataLocation, int (GLuint program, const GLchar* name));
	MOCK_METHOD2(gl_GetStringi, const unsigned char*(GLenum name, GLuint index));
	MOCK_METHOD3(gl_GetTexParameterIiv, void (GLenum target, GLenum pname, GLint* params));
	MOCK_METHOD3(gl_GetTexParameterIuiv, void (GLenum target, GLenum pname, GLuint* params));
	MOCK_METHOD7(gl_GetTransformFeedbackVarying, void (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name));
	MOCK_METHOD3(gl_GetUniformuiv, void (GLuint program, GLint location, GLuint* params));
	MOCK_METHOD3(gl_GetVertexAttribIiv, void (GLuint index, GLenum pname, GLint* params));
	MOCK_METHOD3(gl_GetVertexAttribIuiv, void (GLuint index, GLenum pname, GLuint* params));
	MOCK_METHOD2(gl_IsEnabledi, unsigned char (GLenum cap, GLuint index));
	MOCK_METHOD3(gl_TexParameterIiv, void (GLenum target, GLenum pname, const GLint* params));
	MOCK_METHOD3(gl_TexParameterIuiv, void (GLenum target, GLenum pname, const GLuint* params));
	MOCK_METHOD4(gl_TransformFeedbackVaryings, void (GLuint program, GLsizei count, const GLchar*const * varyings, GLenum bufferMode));
	MOCK_METHOD2(gl_Uniform1ui, void (GLint location, GLuint v0));
	MOCK_METHOD3(gl_Uniform1uiv, void (GLint location, GLsizei count, const GLuint* value));
	MOCK_METHOD3(gl_Uniform2ui, void (GLint location, GLuint v0, GLuint v1));
	MOCK_METHOD3(gl_Uniform2uiv, void (GLint location, GLsizei count, const GLuint* value));
	MOCK_METHOD4(gl_Uniform3ui, void (GLint location, GLuint v0, GLuint v1, GLuint v2));
	MOCK_METHOD3(gl_Uniform3uiv, void (GLint location, GLsizei count, const GLuint* value));
	MOCK_METHOD5(gl_Uniform4ui, void (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3));
	MOCK_METHOD3(gl_Uniform4uiv, void (GLint location, GLsizei count, const GLuint* value));
	MOCK_METHOD2(gl_VertexAttribI1i, void (GLuint index, GLint v0));
	MOCK_METHOD2(gl_VertexAttribI1iv, void (GLuint index, const GLint* v0));
	MOCK_METHOD2(gl_VertexAttribI1ui, void (GLuint index, GLuint v0));
	MOCK_METHOD2(gl_VertexAttribI1uiv, void (GLuint index, const GLuint* v0));
	MOCK_METHOD3(gl_VertexAttribI2i, void (GLuint index, GLint v0, GLint v1));
	MOCK_METHOD2(gl_VertexAttribI2iv, void (GLuint index, const GLint* v0));
	MOCK_METHOD3(gl_VertexAttribI2ui, void (GLuint index, GLuint v0, GLuint v1));
	MOCK_METHOD2(gl_VertexAttribI2uiv, void (GLuint index, const GLuint* v0));
	MOCK_METHOD4(gl_VertexAttribI3i, void (GLuint index, GLint v0, GLint v1, GLint v2));
	MOCK_METHOD2(gl_VertexAttribI3iv, void (GLuint index, const GLint* v0));
	MOCK_METHOD4(gl_VertexAttribI3ui, void (GLuint index, GLuint v0, GLuint v1, GLuint v2));
	MOCK_METHOD2(gl_VertexAttribI3uiv, void (GLuint index, const GLuint* v0));
	MOCK_METHOD2(gl_VertexAttribI4bv, void (GLuint index, const GLbyte* v0));
	MOCK_METHOD5(gl_VertexAttribI4i, void (GLuint index, GLint v0, GLint v1, GLint v2, GLint v3));
	MOCK_METHOD2(gl_VertexAttribI4iv, void (GLuint index, const GLint* v0));
	MOCK_METHOD2(gl_VertexAttribI4sv, void (GLuint index, const GLshort* v0));
	MOCK_METHOD2(gl_VertexAttribI4ubv, void (GLuint index, const GLubyte* v0));
	MOCK_METHOD5(gl_VertexAttribI4ui, void (GLuint index, GLuint v0, GLuint v1, GLuint v2, GLuint v3));
	MOCK_METHOD2(gl_VertexAttribI4uiv, void (GLuint index, const GLuint* v0));
	MOCK_METHOD2(gl_VertexAttribI4usv, void (GLuint index, const GLushort* v0));
	MOCK_METHOD5(gl_VertexAttribIPointer, void (GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer));
	MOCK_METHOD4(gl_DrawArraysInstanced, void (GLenum mode, GLint first, GLsizei count, GLsizei primcount));
	MOCK_METHOD5(gl_DrawElementsInstanced, void (GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount));
	MOCK_METHOD1(gl_PrimitiveRestartIndex, void (GLuint buffer));
	MOCK_METHOD3(gl_TexBuffer, void (GLenum target, GLenum internalFormat, GLuint buffer));
	MOCK_METHOD4(gl_FramebufferTexture, void (GLenum target, GLenum attachment, GLuint texture, GLint level));
	MOCK_METHOD3(gl_GetBufferParameteri64v, void (GLenum target, GLenum value, GLint64* data));
	MOCK_METHOD3(gl_GetInteger64i_v, void (GLenum pname, GLuint index, GLint64* data));
	MOCK_METHOD2(gl_VertexAttribDivisor, void (GLuint index, GLuint divisor));
	MOCK_METHOD3(gl_BlendEquationSeparatei, void (GLuint buf, GLenum modeRGB, GLenum modeAlpha));
	MOCK_METHOD2(gl_BlendEquationi, void (GLuint buf, GLenum mode));
	MOCK_METHOD5(gl_BlendFuncSeparatei, void (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha));
	MOCK_METHOD3(gl_BlendFunci, void (GLuint buf, GLenum src, GLenum dst));
	MOCK_METHOD1(gl_MinSampleShading, void (GLclampf value));
	MOCK_METHOD0(gl_GetGraphicsResetStatus, unsigned int ());
	MOCK_METHOD4(gl_GetnCompressedTexImage, void (GLenum target, GLint lod, GLsizei bufSize, GLvoid* pixels));
	MOCK_METHOD6(gl_GetnTexImage, void (GLenum tex, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid* pixels));
	MOCK_METHOD4(gl_GetnUniformdv, void (GLuint program, GLint location, GLsizei bufSize, GLdouble* params));
	MOCK_METHOD2(gl_BindBufferARB, void (GLenum target, GLuint buffer));
	MOCK_METHOD4(gl_BufferDataARB, void (GLenum target, GLsizeiptrARB size, const void* data, GLenum usage));
	MOCK_METHOD4(gl_BufferSubDataARB, void (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void* data));
	MOCK_METHOD2(gl_DeleteBuffersARB, void (GLsizei n, const GLuint* buffers));
	MOCK_METHOD2(gl_GenBuffersARB, void (GLsizei n, GLuint* buffers));
	MOCK_METHOD3(gl_GetBufferParameterivARB, void (GLenum target, GLenum pname, GLint* params));
	MOCK_METHOD3(gl_GetBufferPointervARB, void (GLenum target, GLenum pname, void** params));
	MOCK_METHOD4(gl_GetBufferSubDataARB, void (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void* data));
	MOCK_METHOD1(gl_IsBufferARB, unsigned char (GLuint buffer));
	MOCK_METHOD2(gl_MapBufferARB, void*(GLenum target, GLenum access));
	MOCK_METHOD1(gl_UnmapBufferARB, unsigned char (GLenum target));
	MOCK_METHOD0(glew_Init, GLenum ());
	MOCK_METHOD1(glew_IsSupported, GLboolean (const char* name));
	MOCK_METHOD1(glew_GetExtension, GLboolean (const char* name));
	MOCK_METHOD1(glew_GetErrorString, const GLubyte*(GLenum error));
	MOCK_METHOD1(glew_GetString, const GLubyte*(GLenum name));
    MOCK_METHOD1(gl_BindVertexArray, void(GLuint array));
    MOCK_METHOD2(gl_DeleteVertexArrays, void(GLsizei n, const GLuint* arrays));
    MOCK_METHOD2(gl_GenVertexArrays, void(GLsizei n, GLuint* arrays));
    MOCK_METHOD1(gl_IsVertexArray, GLboolean(GLuint array));
};

#endif
